% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FilesApi.r
\docType{data}
\name{FilesApi}
\alias{FilesApi}
\title{Files operations}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
FilesApi
}
\description{
rAgave.Files
}
\section{Methods}{

\describe{

clear_file_item_permissions

`$delete

\code{$download(path, systemId, filename)} Downloads the file on th remote system
to the local disk. The original remote filename is preserved if none is provied.`

\code{$readStream(path, systemId, callback)} Fetches the remote file as a byte
stream an returns it to the callback function as an argument.

\code{transfer(path, systemId, source, body)} Initiate a transfer of a file from
one location to another. For convenience, the \code{source} url can be provided.
For detailed transfer requests including policy, notifications, permissions,
etc, provide a valid body to pass on to the API.

\emph{\strong{If the transfer is within a single system, it is
usually faster to use the copy action of a manage operation.}}

The source URL may be given in the following forms:
\itemize{
\item \emph{File path}: relative or absolute path on your default storage system
\item \emph{Agave URL}: An internal Agave URL of the form `agave://<systemId>/<path>
\item \emph{Public URL}: Any publicy accessible URL with a supported data protocol.
}

\code{$upload(path, systemId, localPath, body)}  Upload a local file to the given
system within the given directory path. The remote path must be a directory.
If no body is provided, the local filename is preserved and will overwrite
a remote file with the same name, if present.

For detailed transfer requests including policy, notifications, permissions,
etc, provide a valid body to pass on to the API.

\code{$manage(path, systemId, body)} Performs management actions on the file item
on the given system at the given path

\code{$history(path, systemId)} Lists history of the file item on the given system
at the given path.

\code{$listPermissions()} List the permissions assigned to file item on the given
system at the given path.

\code{$list()} List the file item at the given path on the given system.

\code{$updatePermissions(path, systemId, username, permission, recursive)} Add
or update a user permission for the given file item on the given system.

}
}

\keyword{datasets}
