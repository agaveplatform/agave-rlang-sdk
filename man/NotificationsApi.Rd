% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NotificationsApi.r
\docType{data}
\name{NotificationsApi}
\alias{NotificationsApi}
\title{Agave Notifications API operations}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
notifications <- NotificationsApi$new( apiClient = ApiClient$new(), cache = AgaveCache$new() )
}
\description{
NotificationsApi Class
}
\details{
Under the covers, the Agave API is an event-driven distributed system implemented on top of a reliable, cloud-based messaging system. This means that every action either observed or taken by Agave is tied to an event. The changing of a job from one status to another is an event. The granting of permissions on a file is an event. Editing a piece of metadata is an event, and to be sure, the moment you created an account with Agave was an event. You get the idea.

Having such a fine-grain event system is helpful for the same reason that having a fine-grain permission model is helpful. It affords you the highest degree of flexibility and control possible to achieve the behavior you desire. With Agaveâ€™s event system, you have the ability to alert your users (or yourself) the instant something occurs. You can be proactive rather than reactive, and you can begin orchestrating your complex tasks in a loosely coupled, asynchronous way.

Read more about the Notifications API in the \href{http://docs.agaveplatform.org/#/notifications}{Agave Developer's Guide}
}
\section{Arguments}{

\describe{

\code{apiClient} a \link[rAgave:ApiClient]{rAgave::ApiClient} instance preconfigured to speak to the Agave Platform.

\code{cache} an \link[rAgave:AgaveCache]{rAgave::AgaveCache} instance pointing to the persistent auth cache file on disk.

\code{responseType} the default object type methods of this class should return. Valid values are:
\itemize{
\item \strong{raw}: the raw JSON string response from the API. You may optionally include
\code{pretty=TRUE} in the method call to receive pretty printed JSON.
\item \strong{list}: a standard R list object. This is the default value.
\item \strong{dt}: a data table
}

}
}

\section{Methods}{

\describe{

\code{$addNotification()} Add new notification.

\strong{Usage}\preformatted{notifications$addNotification$listNotifications(body, naked, )
}

\code{$deleteNotification()} Remove notification from the system.

\strong{Usage}\preformatted{notifications$deleteNotification$listNotifications(uuid, naked, )
}

\code{$getNotification()} Retrieve notification.

\strong{Usage}\preformatted{notifications$getNotification$listNotifications(uuid, naked, )
}

\code{$listNotifications()} Retrieve notification for a specific resource.

\strong{Usage}\preformatted{notifications$listNotifications$listNotifications(associatedUuid, naked, limit, offset, search, )
notifications$listNotifications$listNotifications(search=list("foo"="bar"))
}

\code{$updateNotification()} Update existing notification.

\strong{Usage}\preformatted{notifications$updateNotification$listNotifications(uuid, body, naked, )
}

}
}

\seealso{
\link[rAgave:ApiClient]{rAgave::ApiClient} \link[rAgave:Agave]{rAgave::Agave} \link[rAgave:NotificationRequest]{rAgave::Notification}
}
\keyword{datasets}
